@page "/Products"
<h3>List Product</h3>

<div class="mb-3">
    <a class="btn btn-success" href="CreateProduct">Create Product</a>
</div>

@if (products == null)
{
    <p><em>Loading...</em></p>
}
else if (products.Length == 0)
{
    <text>Products not found</text>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th></th>
                <th>Id</th>
                <th>Code</th>
                <th>Name</th>
                <th>Price</th>
                <th>Created</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in products)
            {
                <tr>
                    <td>
                        <a class="btn btn-success" href="UpdateProduct/@item.Id">Edit</a>
                        <button class="btn btn-danger" @onclick="() => DeleteAsync(item.Id)">Delete</button>
                    </td>
                    <td>@item.Id</td>
                    <td>@item.Code</td>
                    <td>@item.Name</td>
                    <td>@item.Price</td>
                    <td>@item.Create_Date</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    Product[] products { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await GetProducts();
    }
    async Task GetProducts()
    {
        products = await Http.GetFromJsonAsync<Product[]>("https://localhost:44392/api/Product");
    }
    async Task DeleteAsync(int Id)
    {
        await Http.DeleteAsync($"https://localhost:44392/api/Product/{Id}");
        await GetProducts();
    }
}
